# ðŸš€ POS CafeLux - Environment Configuration Example
# Copy this file to .env and update with your actual values

# ===== DATABASE CONFIGURATION =====
# For Niagahoster MySQL Database
# Format: mysql://username:password@hostname:port/database
# Example: DATABASE_URL=mysql://u1576438_caluxkonde:your_password@mysql.niagahoster.com:3306/u1576438_pos_cafelux

# OPTION 1: Niagahoster MySQL (Production)
DATABASE_URL=mysql://your_username:your_password@mysql.niagahoster.com:3306/your_database

# OPTION 2: No DATABASE_URL (Development with MemStorage)
# Comment out or remove DATABASE_URL to use in-memory storage
# DATABASE_URL=

# ===== DATABASE DETAILS (Optional) =====
DB_HOST=mysql.niagahoster.com
DB_PORT=3306
DB_NAME=your_database_name
DB_USER=your_username
DB_PASSWORD=your_password

# ===== APPLICATION CONFIGURATION =====
NODE_ENV=development
PORT=5000
SESSION_SECRET=pos-cafelux-secret-key-change-in-production

# ===== HOSTING CONFIGURATION =====
HOSTING_PROVIDER=niagahoster
DEPLOYMENT_MODE=development
ENABLE_DATABASE=true

# ===== VERCEL CONFIGURATION =====
# These are automatically set by Vercel
# VERCEL=1
# VERCEL_ENV=production
# VERCEL_URL=pos-cafelux-main.vercel.app

# ===== COMMON NIAGAHOSTER EXAMPLES =====
# Replace with your actual credentials from cPanel

# Example 1: Standard Niagahoster format
# DATABASE_URL=mysql://u1234567_username:password123@mysql.niagahoster.com:3306/u1234567_pos_cafelux

# Example 2: Alternative hostname format
# DATABASE_URL=mysql://username:password@server123.niagahoster.com:3306/database_name

# Example 3: With SSL (if required)
# DATABASE_URL=mysql://username:password@hostname:3306/database?ssl=true

# ===== TROUBLESHOOTING =====
# If you get connection errors:
# 1. Check hostname (usually mysql.niagahoster.com)
# 2. Verify username includes your cPanel prefix
# 3. Ensure database exists in cPanel
# 4. Confirm user has ALL PRIVILEGES
# 5. Test with: node check-database-connection.js

# ===== SETUP HELP =====
# Run these commands for help:
# npm run db:setup:niagahoster    - Interactive setup
# node check-database-connection.js - Check current config
# node test-niagahoster-connection.js - Test connection
